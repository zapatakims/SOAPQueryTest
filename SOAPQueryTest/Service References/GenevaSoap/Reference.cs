//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SOAPQueryTest.GenevaSoap {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenevaConnectionParameters", Namespace="http://www.advent.com/geneva/soapservice")]
    [System.SerializableAttribute()]
    public partial class GenevaConnectionParameters : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenevaClusterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenevaHostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GenevaPortField;
        
        private string PasswordField;
        
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GenevaCluster {
            get {
                return this.GenevaClusterField;
            }
            set {
                if ((object.ReferenceEquals(this.GenevaClusterField, value) != true)) {
                    this.GenevaClusterField = value;
                    this.RaisePropertyChanged("GenevaCluster");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GenevaHost {
            get {
                return this.GenevaHostField;
            }
            set {
                if ((object.ReferenceEquals(this.GenevaHostField, value) != true)) {
                    this.GenevaHostField = value;
                    this.RaisePropertyChanged("GenevaHost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GenevaPort {
            get {
                return this.GenevaPortField;
            }
            set {
                if ((this.GenevaPortField.Equals(value) != true)) {
                    this.GenevaPortField = value;
                    this.RaisePropertyChanged("GenevaPort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenevaExceptionBase", Namespace="http://www.advent.com/geneva/soapservice")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SOAPQueryTest.GenevaSoap.InvalidParameter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SOAPQueryTest.GenevaSoap.InvalidGenevaSession))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SOAPQueryTest.GenevaSoap.GenevaError))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SOAPQueryTest.GenevaSoap.InvalidGenevaCredentials))]
    public partial class GenevaExceptionBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvalidParameter", Namespace="http://www.advent.com/geneva/soapservice")]
    [System.SerializableAttribute()]
    public partial class InvalidParameter : SOAPQueryTest.GenevaSoap.GenevaExceptionBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvalidGenevaSession", Namespace="http://www.advent.com/geneva/soapservice")]
    [System.SerializableAttribute()]
    public partial class InvalidGenevaSession : SOAPQueryTest.GenevaSoap.GenevaExceptionBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenevaError", Namespace="http://www.advent.com/geneva/soapservice")]
    [System.SerializableAttribute()]
    public partial class GenevaError : SOAPQueryTest.GenevaSoap.GenevaExceptionBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvalidGenevaCredentials", Namespace="http://www.advent.com/geneva/soapservice")]
    [System.SerializableAttribute()]
    public partial class InvalidGenevaCredentials : SOAPQueryTest.GenevaSoap.GenevaExceptionBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenevaResults", Namespace="http://www.advent.com/geneva/soapservice")]
    [System.SerializableAttribute()]
    public partial class GenevaResults : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenevaReportResults", Namespace="http://www.advent.com/geneva/soapservice")]
    [System.SerializableAttribute()]
    public partial class GenevaReportResults : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SOAPQueryTest.GenevaSoap.GenevaReportResult[] ResultsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SOAPQueryTest.GenevaSoap.GenevaReportResult[] Results {
            get {
                return this.ResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultsField, value) != true)) {
                    this.ResultsField = value;
                    this.RaisePropertyChanged("Results");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenevaReportResult", Namespace="http://www.advent.com/geneva/soapservice")]
    [System.SerializableAttribute()]
    public partial class GenevaReportResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SOAPQueryTest.GenevaSoap.GenevaResultRecord[] AddendumErrorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SOAPQueryTest.GenevaSoap.GenevaResultRecord[] HeaderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SOAPQueryTest.GenevaSoap.GenevaResultRecord[] ParameterSetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PortfolioNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SOAPQueryTest.GenevaSoap.GenevaResultRecord[] RecordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SOAPQueryTest.GenevaSoap.GenevaResultRecord[] AddendumErrors {
            get {
                return this.AddendumErrorsField;
            }
            set {
                if ((object.ReferenceEquals(this.AddendumErrorsField, value) != true)) {
                    this.AddendumErrorsField = value;
                    this.RaisePropertyChanged("AddendumErrors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SOAPQueryTest.GenevaSoap.GenevaResultRecord[] Header {
            get {
                return this.HeaderField;
            }
            set {
                if ((object.ReferenceEquals(this.HeaderField, value) != true)) {
                    this.HeaderField = value;
                    this.RaisePropertyChanged("Header");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SOAPQueryTest.GenevaSoap.GenevaResultRecord[] ParameterSet {
            get {
                return this.ParameterSetField;
            }
            set {
                if ((object.ReferenceEquals(this.ParameterSetField, value) != true)) {
                    this.ParameterSetField = value;
                    this.RaisePropertyChanged("ParameterSet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PortfolioName {
            get {
                return this.PortfolioNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PortfolioNameField, value) != true)) {
                    this.PortfolioNameField = value;
                    this.RaisePropertyChanged("PortfolioName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SOAPQueryTest.GenevaSoap.GenevaResultRecord[] Record {
            get {
                return this.RecordField;
            }
            set {
                if ((object.ReferenceEquals(this.RecordField, value) != true)) {
                    this.RecordField = value;
                    this.RaisePropertyChanged("Record");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenevaResultRecord", Namespace="http://www.advent.com/geneva/soapservice")]
    [System.SerializableAttribute()]
    public partial class GenevaResultRecord : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SOAPQueryTest.GenevaSoap.GenevaResultElement[] ResultElementsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SOAPQueryTest.GenevaSoap.GenevaResultElement[] ResultElements {
            get {
                return this.ResultElementsField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultElementsField, value) != true)) {
                    this.ResultElementsField = value;
                    this.RaisePropertyChanged("ResultElements");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenevaResultElement", Namespace="http://www.advent.com/geneva/soapservice")]
    [System.SerializableAttribute()]
    public partial class GenevaResultElement : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenevaReportDefList", Namespace="http://www.advent.com/geneva/soapservice")]
    [System.SerializableAttribute()]
    public partial class GenevaReportDefList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SOAPQueryTest.GenevaSoap.GenevaReportDef[] ReportsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SOAPQueryTest.GenevaSoap.GenevaReportDef[] Reports {
            get {
                return this.ReportsField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportsField, value) != true)) {
                    this.ReportsField = value;
                    this.RaisePropertyChanged("Reports");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenevaReportDef", Namespace="http://www.advent.com/geneva/soapservice")]
    [System.SerializableAttribute()]
    public partial class GenevaReportDef : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReportFileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReportNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReportFileName {
            get {
                return this.ReportFileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportFileNameField, value) != true)) {
                    this.ReportFileNameField = value;
                    this.RaisePropertyChanged("ReportFileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReportName {
            get {
                return this.ReportNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportNameField, value) != true)) {
                    this.ReportNameField = value;
                    this.RaisePropertyChanged("ReportName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenevaReportDetail", Namespace="http://www.advent.com/geneva/soapservice")]
    [System.SerializableAttribute()]
    public partial class GenevaReportDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SOAPQueryTest.GenevaSoap.GenevaReportArg[] ReportArgsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] SubmissionTypesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SOAPQueryTest.GenevaSoap.GenevaReportArg[] ReportArgs {
            get {
                return this.ReportArgsField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportArgsField, value) != true)) {
                    this.ReportArgsField = value;
                    this.RaisePropertyChanged("ReportArgs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] SubmissionTypes {
            get {
                return this.SubmissionTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.SubmissionTypesField, value) != true)) {
                    this.SubmissionTypesField = value;
                    this.RaisePropertyChanged("SubmissionTypes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenevaReportArg", Namespace="http://www.advent.com/geneva/soapservice")]
    [System.SerializableAttribute()]
    public partial class GenevaReportArg : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArgumentDefaultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArgumentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArgumentTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArgumentDefault {
            get {
                return this.ArgumentDefaultField;
            }
            set {
                if ((object.ReferenceEquals(this.ArgumentDefaultField, value) != true)) {
                    this.ArgumentDefaultField = value;
                    this.RaisePropertyChanged("ArgumentDefault");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArgumentName {
            get {
                return this.ArgumentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ArgumentNameField, value) != true)) {
                    this.ArgumentNameField = value;
                    this.RaisePropertyChanged("ArgumentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArgumentType {
            get {
                return this.ArgumentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ArgumentTypeField, value) != true)) {
                    this.ArgumentTypeField = value;
                    this.RaisePropertyChanged("ArgumentType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenevaQueryDefList", Namespace="http://www.advent.com/geneva/soapservice")]
    [System.SerializableAttribute()]
    public partial class GenevaQueryDefList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SOAPQueryTest.GenevaSoap.GenevaQueryDef[] QueryDefsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SOAPQueryTest.GenevaSoap.GenevaQueryDef[] QueryDefs {
            get {
                return this.QueryDefsField;
            }
            set {
                if ((object.ReferenceEquals(this.QueryDefsField, value) != true)) {
                    this.QueryDefsField = value;
                    this.RaisePropertyChanged("QueryDefs");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenevaQueryDef", Namespace="http://www.advent.com/geneva/soapservice")]
    [System.SerializableAttribute()]
    public partial class GenevaQueryDef : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QueryNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QueryName {
            get {
                return this.QueryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.QueryNameField, value) != true)) {
                    this.QueryNameField = value;
                    this.RaisePropertyChanged("QueryName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenevaQueryDetail", Namespace="http://www.advent.com/geneva/soapservice")]
    [System.SerializableAttribute()]
    public partial class GenevaQueryDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] QueryArgsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QueryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] QueryResultSetField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] QueryArgs {
            get {
                return this.QueryArgsField;
            }
            set {
                if ((object.ReferenceEquals(this.QueryArgsField, value) != true)) {
                    this.QueryArgsField = value;
                    this.RaisePropertyChanged("QueryArgs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QueryName {
            get {
                return this.QueryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.QueryNameField, value) != true)) {
                    this.QueryNameField = value;
                    this.RaisePropertyChanged("QueryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] QueryResultSet {
            get {
                return this.QueryResultSetField;
            }
            set {
                if ((object.ReferenceEquals(this.QueryResultSetField, value) != true)) {
                    this.QueryResultSetField = value;
                    this.RaisePropertyChanged("QueryResultSet");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenevaQueryResults", Namespace="http://www.advent.com/geneva/soapservice")]
    [System.SerializableAttribute()]
    public partial class GenevaQueryResults : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SOAPQueryTest.GenevaSoap.GenevaQueryResult[] ResultsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SOAPQueryTest.GenevaSoap.GenevaQueryResult[] Results {
            get {
                return this.ResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultsField, value) != true)) {
                    this.ResultsField = value;
                    this.RaisePropertyChanged("Results");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenevaQueryResult", Namespace="http://www.advent.com/geneva/soapservice")]
    [System.SerializableAttribute()]
    public partial class GenevaQueryResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PortfolioNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SOAPQueryTest.GenevaSoap.GenevaResultRecord[] ResultRecordsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PortfolioName {
            get {
                return this.PortfolioNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PortfolioNameField, value) != true)) {
                    this.PortfolioNameField = value;
                    this.RaisePropertyChanged("PortfolioName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SOAPQueryTest.GenevaSoap.GenevaResultRecord[] ResultRecords {
            get {
                return this.ResultRecordsField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultRecordsField, value) != true)) {
                    this.ResultRecordsField = value;
                    this.RaisePropertyChanged("ResultRecords");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenevaSelectResults", Namespace="http://www.advent.com/geneva/soapservice")]
    [System.SerializableAttribute()]
    public partial class GenevaSelectResults : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SOAPQueryTest.GenevaSoap.GenevaSelectResult[] ResultsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SOAPQueryTest.GenevaSoap.GenevaSelectResult[] Results {
            get {
                return this.ResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultsField, value) != true)) {
                    this.ResultsField = value;
                    this.RaisePropertyChanged("Results");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenevaSelectResult", Namespace="http://www.advent.com/geneva/soapservice")]
    [System.SerializableAttribute()]
    public partial class GenevaSelectResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SOAPQueryTest.GenevaSoap.GenevaResultRecord[] FieldsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PortfolioNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SOAPQueryTest.GenevaSoap.GenevaResultRecord[] Fields {
            get {
                return this.FieldsField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldsField, value) != true)) {
                    this.FieldsField = value;
                    this.RaisePropertyChanged("Fields");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PortfolioName {
            get {
                return this.PortfolioNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PortfolioNameField, value) != true)) {
                    this.PortfolioNameField = value;
                    this.RaisePropertyChanged("PortfolioName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenevaLoadResults", Namespace="http://www.advent.com/geneva/soapservice")]
    [System.SerializableAttribute()]
    public partial class GenevaLoadResults : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenevaSSRSReportParams", Namespace="http://www.advent.com/geneva/soapservice")]
    [System.SerializableAttribute()]
    public partial class GenevaSSRSReportParams : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReportNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SOAPQueryTest.GenevaSoap.FileFormatSSRS ReportOutputFormatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, object> ReportParametersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReportPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReportServerURLField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReportName {
            get {
                return this.ReportNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportNameField, value) != true)) {
                    this.ReportNameField = value;
                    this.RaisePropertyChanged("ReportName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SOAPQueryTest.GenevaSoap.FileFormatSSRS ReportOutputFormat {
            get {
                return this.ReportOutputFormatField;
            }
            set {
                if ((this.ReportOutputFormatField.Equals(value) != true)) {
                    this.ReportOutputFormatField = value;
                    this.RaisePropertyChanged("ReportOutputFormat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, object> ReportParameters {
            get {
                return this.ReportParametersField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportParametersField, value) != true)) {
                    this.ReportParametersField = value;
                    this.RaisePropertyChanged("ReportParameters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReportPath {
            get {
                return this.ReportPathField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportPathField, value) != true)) {
                    this.ReportPathField = value;
                    this.RaisePropertyChanged("ReportPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReportServerURL {
            get {
                return this.ReportServerURLField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportServerURLField, value) != true)) {
                    this.ReportServerURLField = value;
                    this.RaisePropertyChanged("ReportServerURL");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileFormatSSRS", Namespace="http://www.advent.com/geneva/soapservice")]
    public enum FileFormatSSRS : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PDF = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EXCEL = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WORD = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MHTML = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XML = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CSV = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IMAGE = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HTML4_0 = 128,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.advent.com/geneva/soapservice", ConfigurationName="GenevaSoap.IGenevaSoapService")]
    public interface IGenevaSoapService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.advent.com/geneva/soapservice/IGenevaSession/GenevaConnection", ReplyAction="http://www.advent.com/geneva/soapservice/IGenevaSession/GenevaConnectionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SOAPQueryTest.GenevaSoap.InvalidGenevaCredentials), Action="http://www.advent.com/geneva/soapservice/IGenevaSession/GenevaConnectionInvalidGe" +
            "nevaCredentialsFault", Name="InvalidGenevaCredentials")]
        [System.ServiceModel.FaultContractAttribute(typeof(SOAPQueryTest.GenevaSoap.InvalidParameter), Action="http://www.advent.com/geneva/soapservice/IGenevaSession/GenevaConnectionInvalidPa" +
            "rameterFault", Name="InvalidParameter")]
        [System.ServiceModel.FaultContractAttribute(typeof(SOAPQueryTest.GenevaSoap.InvalidGenevaSession), Action="http://www.advent.com/geneva/soapservice/IGenevaSession/GenevaConnectionInvalidGe" +
            "nevaSessionFault", Name="InvalidGenevaSession")]
        string GenevaConnection(SOAPQueryTest.GenevaSoap.GenevaConnectionParameters connection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.advent.com/geneva/soapservice/IGenevaSession/Close", ReplyAction="http://www.advent.com/geneva/soapservice/IGenevaSession/CloseResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SOAPQueryTest.GenevaSoap.InvalidGenevaSession), Action="http://www.advent.com/geneva/soapservice/IGenevaSession/CloseInvalidGenevaSession" +
            "Fault", Name="InvalidGenevaSession")]
        void Close(string sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.advent.com/geneva/soapservice/IGenevaSoapService/SwitchFirm", ReplyAction="http://www.advent.com/geneva/soapservice/IGenevaSoapService/SwitchFirmResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SOAPQueryTest.GenevaSoap.GenevaError), Action="http://www.advent.com/geneva/soapservice/IGenevaSoapService/SwitchFirmGenevaError" +
            "Fault", Name="GenevaError")]
        [System.ServiceModel.FaultContractAttribute(typeof(SOAPQueryTest.GenevaSoap.InvalidParameter), Action="http://www.advent.com/geneva/soapservice/IGenevaSoapService/SwitchFirmInvalidPara" +
            "meterFault", Name="InvalidParameter")]
        bool SwitchFirm(string sessionId, string firmName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.advent.com/geneva/soapservice/IGenevaSoapService/DescribeClassString", ReplyAction="http://www.advent.com/geneva/soapservice/IGenevaSoapService/DescribeClassStringRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SOAPQueryTest.GenevaSoap.GenevaError), Action="http://www.advent.com/geneva/soapservice/IGenevaSoapService/DescribeClassStringGe" +
            "nevaErrorFault", Name="GenevaError")]
        [System.ServiceModel.FaultContractAttribute(typeof(SOAPQueryTest.GenevaSoap.InvalidParameter), Action="http://www.advent.com/geneva/soapservice/IGenevaSoapService/DescribeClassStringIn" +
            "validParameterFault", Name="InvalidParameter")]
        SOAPQueryTest.GenevaSoap.GenevaResults DescribeClassString(string sessionId, string className);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.advent.com/geneva/soapservice/IGenevaSoapService/DescribeClass", ReplyAction="http://www.advent.com/geneva/soapservice/IGenevaSoapService/DescribeClassResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(SOAPQueryTest.GenevaSoap.GenevaError), Action="http://www.advent.com/geneva/soapservice/IGenevaSoapService/DescribeClassGenevaEr" +
            "rorFault", Name="GenevaError")]
        [System.ServiceModel.FaultContractAttribute(typeof(SOAPQueryTest.GenevaSoap.InvalidParameter), Action="http://www.advent.com/geneva/soapservice/IGenevaSoapService/DescribeClassInvalidP" +
            "arameterFault", Name="InvalidParameter")]
        string[] DescribeClass(string sessionId, string className);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.advent.com/geneva/soapservice/IGenevaSoapService/ExecuteGSQL", ReplyAction="http://www.advent.com/geneva/soapservice/IGenevaSoapService/ExecuteGSQLResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SOAPQueryTest.GenevaSoap.GenevaError), Action="http://www.advent.com/geneva/soapservice/IGenevaSoapService/ExecuteGSQLGenevaErro" +
            "rFault", Name="GenevaError")]
        [System.ServiceModel.FaultContractAttribute(typeof(SOAPQueryTest.GenevaSoap.InvalidParameter), Action="http://www.advent.com/geneva/soapservice/IGenevaSoapService/ExecuteGSQLInvalidPar" +
            "ameterFault", Name="InvalidParameter")]
        SOAPQueryTest.GenevaSoap.GenevaResults ExecuteGSQL(string sessionId, string genevaSql);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.advent.com/geneva/soapservice/IGenevaSoapService/ExecuteReportAsPDF", ReplyAction="http://www.advent.com/geneva/soapservice/IGenevaSoapService/ExecuteReportAsPDFRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SOAPQueryTest.GenevaSoap.InvalidParameter), Action="http://www.advent.com/geneva/soapservice/IGenevaSoapService/ExecuteReportAsPDFInv" +
            "alidParameterFault", Name="InvalidParameter")]
        [System.ServiceModel.FaultContractAttribute(typeof(SOAPQueryTest.GenevaSoap.GenevaError), Action="http://www.advent.com/geneva/soapservice/IGenevaSoapService/ExecuteReportAsPDFGen" +
            "evaErrorFault", Name="GenevaError")]
        byte[] ExecuteReportAsPDF(string sessionId, string reportName, System.Collections.Generic.Dictionary<string, string> reportParameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.advent.com/geneva/soapservice/IGenevaSoapService/ExecuteReportFormatte" +
            "d", ReplyAction="http://www.advent.com/geneva/soapservice/IGenevaSoapService/ExecuteReportFormatte" +
            "dResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SOAPQueryTest.GenevaSoap.InvalidParameter), Action="http://www.advent.com/geneva/soapservice/IGenevaSoapService/ExecuteReportFormatte" +
            "dInvalidParameterFault", Name="InvalidParameter")]
        [System.ServiceModel.FaultContractAttribute(typeof(SOAPQueryTest.GenevaSoap.GenevaError), Action="http://www.advent.com/geneva/soapservice/IGenevaSoapService/ExecuteReportFormatte" +
            "dGenevaErrorFault", Name="GenevaError")]
        SOAPQueryTest.GenevaSoap.GenevaResults ExecuteReportFormatted(string sessionId, string reportName, System.Collections.Generic.Dictionary<string, string> reportParameters, string format);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.advent.com/geneva/soapservice/IGenevaSoapService/ExecuteReport", ReplyAction="http://www.advent.com/geneva/soapservice/IGenevaSoapService/ExecuteReportResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(SOAPQueryTest.GenevaSoap.InvalidParameter), Action="http://www.advent.com/geneva/soapservice/IGenevaSoapService/ExecuteReportInvalidP" +
            "arameterFault", Name="InvalidParameter")]
        [System.ServiceModel.FaultContractAttribute(typeof(SOAPQueryTest.GenevaSoap.GenevaError), Action="http://www.advent.com/geneva/soapservice/IGenevaSoapService/ExecuteReportGenevaEr" +
            "rorFault", Name="GenevaError")]
        SOAPQueryTest.GenevaSoap.GenevaReportResults ExecuteReport(string sessionId, string reportName, System.Collections.Generic.Dictionary<string, string> reportParameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.advent.com/geneva/soapservice/IGenevaSoapService/GetReportList", ReplyAction="http://www.advent.com/geneva/soapservice/IGenevaSoapService/GetReportListResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(SOAPQueryTest.GenevaSoap.InvalidParameter), Action="http://www.advent.com/geneva/soapservice/IGenevaSoapService/GetReportListInvalidP" +
            "arameterFault", Name="InvalidParameter")]
        [System.ServiceModel.FaultContractAttribute(typeof(SOAPQueryTest.GenevaSoap.GenevaError), Action="http://www.advent.com/geneva/soapservice/IGenevaSoapService/GetReportListGenevaEr" +
            "rorFault", Name="GenevaError")]
        SOAPQueryTest.GenevaSoap.GenevaReportDefList GetReportList(string sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.advent.com/geneva/soapservice/IGenevaSoapService/GetReportDetail", ReplyAction="http://www.advent.com/geneva/soapservice/IGenevaSoapService/GetReportDetailRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(SOAPQueryTest.GenevaSoap.GenevaError), Action="http://www.advent.com/geneva/soapservice/IGenevaSoapService/GetReportDetailGeneva" +
            "ErrorFault", Name="GenevaError")]
        [System.ServiceModel.FaultContractAttribute(typeof(SOAPQueryTest.GenevaSoap.InvalidParameter), Action="http://www.advent.com/geneva/soapservice/IGenevaSoapService/GetReportDetailInvali" +
            "dParameterFault", Name="InvalidParameter")]
        SOAPQueryTest.GenevaSoap.GenevaReportDetail GetReportDetail(string sessionId, string reportName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.advent.com/geneva/soapservice/IGenevaSoapService/GetQueryList", ReplyAction="http://www.advent.com/geneva/soapservice/IGenevaSoapService/GetQueryListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SOAPQueryTest.GenevaSoap.InvalidParameter), Action="http://www.advent.com/geneva/soapservice/IGenevaSoapService/GetQueryListInvalidPa" +
            "rameterFault", Name="InvalidParameter")]
        [System.ServiceModel.FaultContractAttribute(typeof(SOAPQueryTest.GenevaSoap.GenevaError), Action="http://www.advent.com/geneva/soapservice/IGenevaSoapService/GetQueryListGenevaErr" +
            "orFault", Name="GenevaError")]
        SOAPQueryTest.GenevaSoap.GenevaQueryDefList GetQueryList(string sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.advent.com/geneva/soapservice/IGenevaSoapService/GetQueryDetail", ReplyAction="http://www.advent.com/geneva/soapservice/IGenevaSoapService/GetQueryDetailRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(SOAPQueryTest.GenevaSoap.GenevaError), Action="http://www.advent.com/geneva/soapservice/IGenevaSoapService/GetQueryDetailGenevaE" +
            "rrorFault", Name="GenevaError")]
        [System.ServiceModel.FaultContractAttribute(typeof(SOAPQueryTest.GenevaSoap.InvalidParameter), Action="http://www.advent.com/geneva/soapservice/IGenevaSoapService/GetQueryDetailInvalid" +
            "ParameterFault", Name="InvalidParameter")]
        SOAPQueryTest.GenevaSoap.GenevaQueryDetail GetQueryDetail(string sessionId, string queryName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.advent.com/geneva/soapservice/IGenevaSoapService/ExecuteQueryString", ReplyAction="http://www.advent.com/geneva/soapservice/IGenevaSoapService/ExecuteQueryStringRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SOAPQueryTest.GenevaSoap.InvalidParameter), Action="http://www.advent.com/geneva/soapservice/IGenevaSoapService/ExecuteQueryStringInv" +
            "alidParameterFault", Name="InvalidParameter")]
        [System.ServiceModel.FaultContractAttribute(typeof(SOAPQueryTest.GenevaSoap.GenevaError), Action="http://www.advent.com/geneva/soapservice/IGenevaSoapService/ExecuteQueryStringGen" +
            "evaErrorFault", Name="GenevaError")]
        SOAPQueryTest.GenevaSoap.GenevaResults ExecuteQueryString(string sessionId, string queryName, System.Collections.Generic.Dictionary<string, string> queryParameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.advent.com/geneva/soapservice/IGenevaSoapService/ExecuteQuery", ReplyAction="http://www.advent.com/geneva/soapservice/IGenevaSoapService/ExecuteQueryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SOAPQueryTest.GenevaSoap.InvalidParameter), Action="http://www.advent.com/geneva/soapservice/IGenevaSoapService/ExecuteQueryInvalidPa" +
            "rameterFault", Name="InvalidParameter")]
        [System.ServiceModel.FaultContractAttribute(typeof(SOAPQueryTest.GenevaSoap.GenevaError), Action="http://www.advent.com/geneva/soapservice/IGenevaSoapService/ExecuteQueryGenevaErr" +
            "orFault", Name="GenevaError")]
        SOAPQueryTest.GenevaSoap.GenevaQueryResults ExecuteQuery(string sessionId, string queryName, System.Collections.Generic.Dictionary<string, string> queryParameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.advent.com/geneva/soapservice/IGenevaSoapService/ExecuteSelectString", ReplyAction="http://www.advent.com/geneva/soapservice/IGenevaSoapService/ExecuteSelectStringRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SOAPQueryTest.GenevaSoap.GenevaError), Action="http://www.advent.com/geneva/soapservice/IGenevaSoapService/ExecuteSelectStringGe" +
            "nevaErrorFault", Name="GenevaError")]
        [System.ServiceModel.FaultContractAttribute(typeof(SOAPQueryTest.GenevaSoap.InvalidParameter), Action="http://www.advent.com/geneva/soapservice/IGenevaSoapService/ExecuteSelectStringIn" +
            "validParameterFault", Name="InvalidParameter")]
        SOAPQueryTest.GenevaSoap.GenevaResults ExecuteSelectString(string sessionId, string selectString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.advent.com/geneva/soapservice/IGenevaSoapService/ExecuteSelect", ReplyAction="http://www.advent.com/geneva/soapservice/IGenevaSoapService/ExecuteSelectResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(SOAPQueryTest.GenevaSoap.InvalidParameter), Action="http://www.advent.com/geneva/soapservice/IGenevaSoapService/ExecuteSelectInvalidP" +
            "arameterFault", Name="InvalidParameter")]
        [System.ServiceModel.FaultContractAttribute(typeof(SOAPQueryTest.GenevaSoap.GenevaError), Action="http://www.advent.com/geneva/soapservice/IGenevaSoapService/ExecuteSelectGenevaEr" +
            "rorFault", Name="GenevaError")]
        SOAPQueryTest.GenevaSoap.GenevaSelectResults ExecuteSelect(string sessionId, string selectString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.advent.com/geneva/soapservice/IGenevaSoapService/LoadRecord", ReplyAction="http://www.advent.com/geneva/soapservice/IGenevaSoapService/LoadRecordResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SOAPQueryTest.GenevaSoap.GenevaError), Action="http://www.advent.com/geneva/soapservice/IGenevaSoapService/LoadRecordGenevaError" +
            "Fault", Name="GenevaError")]
        [System.ServiceModel.FaultContractAttribute(typeof(SOAPQueryTest.GenevaSoap.InvalidParameter), Action="http://www.advent.com/geneva/soapservice/IGenevaSoapService/LoadRecordInvalidPara" +
            "meterFault", Name="InvalidParameter")]
        SOAPQueryTest.GenevaSoap.GenevaLoadResults LoadRecord(string sessionId, string loaderXML, string loaderFlags);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.advent.com/geneva/soapservice/IGenevaSoapService/ExecuteSSRSReport", ReplyAction="http://www.advent.com/geneva/soapservice/IGenevaSoapService/ExecuteSSRSReportResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SOAPQueryTest.GenevaSoap.GenevaError), Action="http://www.advent.com/geneva/soapservice/IGenevaSoapService/ExecuteSSRSReportGene" +
            "vaErrorFault", Name="GenevaError")]
        [System.ServiceModel.FaultContractAttribute(typeof(SOAPQueryTest.GenevaSoap.InvalidParameter), Action="http://www.advent.com/geneva/soapservice/IGenevaSoapService/ExecuteSSRSReportInva" +
            "lidParameterFault", Name="InvalidParameter")]
        byte[] ExecuteSSRSReport(SOAPQueryTest.GenevaSoap.GenevaConnectionParameters connectionParameters, string sessionId, string appserver, SOAPQueryTest.GenevaSoap.GenevaSSRSReportParams reportParams);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGenevaSoapServiceChannel : SOAPQueryTest.GenevaSoap.IGenevaSoapService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GenevaSoapServiceClient : System.ServiceModel.ClientBase<SOAPQueryTest.GenevaSoap.IGenevaSoapService>, SOAPQueryTest.GenevaSoap.IGenevaSoapService {
        
        public GenevaSoapServiceClient() {
        }
        
        public GenevaSoapServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GenevaSoapServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GenevaSoapServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GenevaSoapServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GenevaConnection(SOAPQueryTest.GenevaSoap.GenevaConnectionParameters connection) {
            return base.Channel.GenevaConnection(connection);
        }
        
        public void Close(string sessionId) {
            base.Channel.Close(sessionId);
        }
        
        public bool SwitchFirm(string sessionId, string firmName) {
            return base.Channel.SwitchFirm(sessionId, firmName);
        }
        
        public SOAPQueryTest.GenevaSoap.GenevaResults DescribeClassString(string sessionId, string className) {
            return base.Channel.DescribeClassString(sessionId, className);
        }
        
        public string[] DescribeClass(string sessionId, string className) {
            return base.Channel.DescribeClass(sessionId, className);
        }
        
        public SOAPQueryTest.GenevaSoap.GenevaResults ExecuteGSQL(string sessionId, string genevaSql) {
            return base.Channel.ExecuteGSQL(sessionId, genevaSql);
        }
        
        public byte[] ExecuteReportAsPDF(string sessionId, string reportName, System.Collections.Generic.Dictionary<string, string> reportParameters) {
            return base.Channel.ExecuteReportAsPDF(sessionId, reportName, reportParameters);
        }
        
        public SOAPQueryTest.GenevaSoap.GenevaResults ExecuteReportFormatted(string sessionId, string reportName, System.Collections.Generic.Dictionary<string, string> reportParameters, string format) {
            return base.Channel.ExecuteReportFormatted(sessionId, reportName, reportParameters, format);
        }
        
        public SOAPQueryTest.GenevaSoap.GenevaReportResults ExecuteReport(string sessionId, string reportName, System.Collections.Generic.Dictionary<string, string> reportParameters) {
            return base.Channel.ExecuteReport(sessionId, reportName, reportParameters);
        }
        
        public SOAPQueryTest.GenevaSoap.GenevaReportDefList GetReportList(string sessionId) {
            return base.Channel.GetReportList(sessionId);
        }
        
        public SOAPQueryTest.GenevaSoap.GenevaReportDetail GetReportDetail(string sessionId, string reportName) {
            return base.Channel.GetReportDetail(sessionId, reportName);
        }
        
        public SOAPQueryTest.GenevaSoap.GenevaQueryDefList GetQueryList(string sessionId) {
            return base.Channel.GetQueryList(sessionId);
        }
        
        public SOAPQueryTest.GenevaSoap.GenevaQueryDetail GetQueryDetail(string sessionId, string queryName) {
            return base.Channel.GetQueryDetail(sessionId, queryName);
        }
        
        public SOAPQueryTest.GenevaSoap.GenevaResults ExecuteQueryString(string sessionId, string queryName, System.Collections.Generic.Dictionary<string, string> queryParameters) {
            return base.Channel.ExecuteQueryString(sessionId, queryName, queryParameters);
        }
        
        public SOAPQueryTest.GenevaSoap.GenevaQueryResults ExecuteQuery(string sessionId, string queryName, System.Collections.Generic.Dictionary<string, string> queryParameters) {
            return base.Channel.ExecuteQuery(sessionId, queryName, queryParameters);
        }
        
        public SOAPQueryTest.GenevaSoap.GenevaResults ExecuteSelectString(string sessionId, string selectString) {
            return base.Channel.ExecuteSelectString(sessionId, selectString);
        }
        
        public SOAPQueryTest.GenevaSoap.GenevaSelectResults ExecuteSelect(string sessionId, string selectString) {
            return base.Channel.ExecuteSelect(sessionId, selectString);
        }
        
        public SOAPQueryTest.GenevaSoap.GenevaLoadResults LoadRecord(string sessionId, string loaderXML, string loaderFlags) {
            return base.Channel.LoadRecord(sessionId, loaderXML, loaderFlags);
        }
        
        public byte[] ExecuteSSRSReport(SOAPQueryTest.GenevaSoap.GenevaConnectionParameters connectionParameters, string sessionId, string appserver, SOAPQueryTest.GenevaSoap.GenevaSSRSReportParams reportParams) {
            return base.Channel.ExecuteSSRSReport(connectionParameters, sessionId, appserver, reportParams);
        }
    }
}
